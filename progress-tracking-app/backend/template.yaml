AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Fullstack EDA development workshop

Globals:
  Function:
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 15

Parameters:
  ApiStageName:
    Type: String
    Default: Prod
    Description: REQUIRED The name of Websocket API deployment stage
    MinLength: 3
    MaxLength: 10
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: Capital or small letters only.

Resources:
  ##### Websocket API #####
  WebSocketAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WebSocketAPI
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketAPI
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join [ '/', ['integrations', !Ref ConnectInteg] ]
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketAPI
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketAPI
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join [ '/', ['integrations', !Ref DisconnectInteg]]
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketAPI
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  OnMsgRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketAPI
      RouteKey: onMsg
      AuthorizationType: NONE
      OperationName: OnMsgRoute
      Target: !Join [ '/', ['integrations', !Ref OnMsgInteg]]
  OnMsgInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketAPI
      Description: OnMsg Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnMsgFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
      - OnMsgRoute
    Properties:
      ApiId: !Ref WebSocketAPI
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: !Ref ApiStageName
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref WebSocketAPI

  ##### DynamoDB table for managing Websocket connections #####
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True

  ##### Websocket management Lambda functions #####
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_functions/websocket/onConnect/
      Handler: func.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref ConnectionsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketAPI
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_functions/websocket/onDisconnect/
      Handler: func.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref ConnectionsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketAPI
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  OnMsgFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_functions/websocket/onMsg/
      Handler: func.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref ConnectionsTable
          API_URL: !Join [ '', [ 'https://', !Ref WebSocketAPI, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'ApiStageName'] ]
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
        - Statement:
            - Effect: Allow
              Action:
                - 'execute-api:ManageConnections'
              Resource:
                - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketAPI}/*'
  OnMsgPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketAPI
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnMsgFunction
      Principal: apigateway.amazonaws.com


Outputs:
  WebSocketURL:
    Description: "The WSS Protocol URL to connect to. Copy and paste to the field on the client."
    Value: !Join [ '', [ 'wss://', !Ref WebSocketAPI, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'ApiStageName'] ]